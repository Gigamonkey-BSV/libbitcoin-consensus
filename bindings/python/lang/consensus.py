# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_consensus', [dirname(__file__)])
        except ImportError:
            import _consensus
            return _consensus
        if fp is not None:
            try:
                _mod = imp.load_module('_consensus', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _consensus = swig_import_helper()
    del swig_import_helper
else:
    import _consensus
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


LIBBITCOIN_CONSENSUS_VERSION = _consensus.LIBBITCOIN_CONSENSUS_VERSION
verify_result_eval_false = _consensus.verify_result_eval_false
verify_result_eval_true = _consensus.verify_result_eval_true
verify_result_script_size = _consensus.verify_result_script_size
verify_result_push_size = _consensus.verify_result_push_size
verify_result_op_count = _consensus.verify_result_op_count
verify_result_stack_size = _consensus.verify_result_stack_size
verify_result_sig_count = _consensus.verify_result_sig_count
verify_result_pubkey_count = _consensus.verify_result_pubkey_count
verify_result_verify = _consensus.verify_result_verify
verify_result_equalverify = _consensus.verify_result_equalverify
verify_result_checkmultisigverify = _consensus.verify_result_checkmultisigverify
verify_result_checksigverify = _consensus.verify_result_checksigverify
verify_result_numequalverify = _consensus.verify_result_numequalverify
verify_result_bad_opcode = _consensus.verify_result_bad_opcode
verify_result_disabled_opcode = _consensus.verify_result_disabled_opcode
verify_result_invalid_stack_operation = _consensus.verify_result_invalid_stack_operation
verify_result_invalid_altstack_operation = _consensus.verify_result_invalid_altstack_operation
verify_result_unbalanced_conditional = _consensus.verify_result_unbalanced_conditional
verify_result_sig_hashtype = _consensus.verify_result_sig_hashtype
verify_result_sig_der = _consensus.verify_result_sig_der
verify_result_minimaldata = _consensus.verify_result_minimaldata
verify_result_sig_pushonly = _consensus.verify_result_sig_pushonly
verify_result_sig_high_s = _consensus.verify_result_sig_high_s
verify_result_sig_nulldummy = _consensus.verify_result_sig_nulldummy
verify_result_pubkeytype = _consensus.verify_result_pubkeytype
verify_result_cleanstack = _consensus.verify_result_cleanstack
verify_result_discourage_upgradable_nops = _consensus.verify_result_discourage_upgradable_nops
verify_result_op_return = _consensus.verify_result_op_return
verify_result_unknown_error = _consensus.verify_result_unknown_error
verify_result_tx_invalid = _consensus.verify_result_tx_invalid
verify_result_tx_size_invalid = _consensus.verify_result_tx_size_invalid
verify_result_tx_input_invalid = _consensus.verify_result_tx_input_invalid
verify_flags_none = _consensus.verify_flags_none
verify_flags_p2sh = _consensus.verify_flags_p2sh
verify_flags_strictenc = _consensus.verify_flags_strictenc
verify_flags_dersig = _consensus.verify_flags_dersig
verify_flags_low_s = _consensus.verify_flags_low_s
verify_flags_nulldummy = _consensus.verify_flags_nulldummy
verify_flags_sigpushonly = _consensus.verify_flags_sigpushonly
verify_flags_minimaldata = _consensus.verify_flags_minimaldata
verify_flags_discourage_upgradable_nops = _consensus.verify_flags_discourage_upgradable_nops
verify_flags_cleanstack = _consensus.verify_flags_cleanstack
verify_flags_mandatory = _consensus.verify_flags_mandatory
verify_flags_standard = _consensus.verify_flags_standard

def verify_script(*args):
  return _consensus.verify_script(*args)
verify_script = _consensus.verify_script
# This file is compatible with both classic and new-style classes.


